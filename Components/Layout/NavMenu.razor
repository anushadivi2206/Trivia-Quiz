@using MudBlazor
@inject IJSRuntime JSRuntime

<MudPaper Elevation="3" Class="quiz-title-container">
    <MudText Typo="Typo.h3" Class="quiz-title">
        @foreach (var letter in "QUIZZ")
        {
            <span class="quiz-char">@letter</span>
        }
    </MudText>
</MudPaper>

<style>
    .quiz-title-container {
        background: linear-gradient(135deg, var(--mud-palette-primary) 0%, var(--mud-palette-secondary) 100%);
        border-radius: 15px;
        padding: 20px;
        text-align: center;
        margin-bottom: 20px;
    }

    .quiz-title {
        font-weight: bold;
        color: white;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
    }

    .quiz-char {
        display: inline-block;
        animation: float 3s ease-in-out infinite;
    }

        .quiz-char:nth-child(even) {
            color: var(--mud-palette-tertiary);
        }

        .quiz-char:nth-child(odd) {
            color: var(--mud-palette-info);
        }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-10px) rotate(5deg);
        }
    }

    .quiz-title:hover .quiz-char {
        animation: rubberBand 1s;
    }

    @@keyframes rubberBand {
        0% {
            transform: scale3d(1, 1, 1);
        }

        30% {
            transform: scale3d(1.25, 0.75, 1);
        }

        40% {
            transform: scale3d(0.75, 1.25, 1);
        }

        50% {
            transform: scale3d(1.15, 0.85, 1);
        }

        65% {
            transform: scale3d(0.95, 1.05, 1);
        }

        75% {
            transform: scale3d(1.05, 0.95, 1);
        }

        100% {
            transform: scale3d(1, 1, 1);
        }
    }
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setCharIndex");
        }
    }
}